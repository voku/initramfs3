<settingsRoot>
<settingsTab name="CPU">

	<settingsPane description="The following settings are for all global CPU configuration, use it only if you know what you are doing." 
			name="CPU Global Settings">

		<seekBar description="Maximum CPU Speed. ALERT! 1.5Ghz and 1.6Ghz can be unstable for your personal device! Try it, and if the phone is stuck(SOD), then your CPU will not work on such high frequency, nothing can be done! Default: 1200000kHz" 
			name="scaling_max_freq" action="generic /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq" unit="kHz" min="100000" reversed="false" step="100000" max="1600000"/>

		<seekBar description="Minimum CPU Speed. Default: 200000kHz" 
			name="scaling_min_freq" action="generic /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq" unit="kHz" min="100000" reversed="false" step="100000" max="1600000"/>

		<spinner description="This sets the smooth scaling level which prevents ondemand based governors to jump directly to maximum frequency, with load spikes. This setting will only change the behavior of ondemand, HYPER, Sleepy, Scary and PegasusQ governors." 
			name="Smooth Scaling Level" action="generickmem smooth_level 0 int">
			<spinnerItem name="Disabled" value="0"/> 
			<spinnerItem name="1200MHz" value="4"/> 
			<spinnerItem name="1000MHz" value="6"/> 
			<spinnerItem name="800MHz" value="8"/> 
			<spinnerItem name="500MHz" value="11"/> 
			<spinnerItem name="200MHz" value="14"/> 
			<spinnerItem name="100MHz" value="15"/> 
		</spinner>

		<spinner description="Sets the number of CPUs to be used in hot plugging. (only for PegasusQ, LuLzActiveQ, Nightmare)" 
			name="Max CPU Lock" action="generic /sys/devices/system/cpu/cpufreq/pegasusq/max_cpu_lock">
			<spinnerItem name="Dual core mode" value="2"/> 
			<spinnerItem name="Single core mode" value="1"/> 
			<spinnerItem name="Auto" value="0"/> 
		</spinner>

		<spinner description="This will set the AWAKE (screen ON) CPU governor. Default CPU governor will only be set during early stages of booting (before init.d execution), and can be overridden by any other scripts or applications." 
			name="Default CPU Governor" action="generic /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor">
			<spinnerItem name="conservative" value="conservative"/> 
			<spinnerItem name="HYPER" value="HYPER"/> 
			<spinnerItem name="intellidemand" value="intellidemand"/> 
			<spinnerItem name="lulzactiveq" value="lulzactiveq"/> 
			<spinnerItem name="nightmare" value="nightmare"/>
			<spinnerItem name="ondemand" value="ondemand"/> 
			<spinnerItem name="pegasusq" value="pegasusq"/> 
			<spinnerItem name="Scary" value="Scary"/> 
			<spinnerItem name="sleepy" value="sleepy"/>
			<spinnerItem name="zenx" value="zenx"/> 
		</spinner>

		<seekBar description="The second core will be enabled when the load goes above this threshold. If threshold is set above 24, and you have 800Mhz as MAX, second core will not turn ON! If you set MAX CPU frequency lower than 800Mhz, second core will be DISABLED! Default: 20" 
			name="load_h0" action="generic /sys/module/stand_hotplug/parameters/load_h0" unit="%" min="5" reversed="false" step="1" max="30"/>

		<seekBar description="Second core will be disabled when the load goes below this threshold. Default: 20" 
			name="load_l1" action="generic /sys/module/stand_hotplug/parameters/load_l1" unit="%" min="5" reversed="false" step="1" max="50"/>

		<seekBar description="Default: 2" 
			name="min_rq" action="generic /sys/module/stand_hotplug/parameters/min_rq" unit="" min="0" reversed="false" step="1" max="2"/>

		<seekBar description="Default: 20" 
			name="load_rq" action="generic /sys/module/stand_hotplug/parameters/load_rq" unit="%" min="5" reversed="false" step="1" max="35"/>

		<seekBar description="Sets hot plug sampling intervals for screen-on state. Default: 100" 
			name="rate" action="generic /sys/module/stand_hotplug/parameters/rate" unit=" jiffies" min="100" reversed="false" step="100" max="1000"/>

		<seekBar description="Sets the below frequency on which second core will not be turned on, regardless of thresholds. (Default: 600000kHz)" 
			name="freq_min" action="generic /sys/module/stand_hotplug/parameters/freq_min" 
			unit="kHz" min="100000" reversed="false" step="100000" max="1200000"/>

	</settingsPane>

	<settingsPane description="These settings control CFS (Complete Fair Scheduler) Task Scheduler Settings" name="CFS Settings">

		<checkbox description="Disabling GENTLE FAIR SLEEPERS may give you better UI responsiveness, so NOT checked is GOOD." 
			name="GENTLE FAIR SLEEPERS" action="schedfeat GENTLE_FAIR_SLEEPERS" label="GENTLE FAIR SLEEPERS"/>

		<checkbox description="Using ARCH POWER enables the use of ARM topology power functions instead of generic ones, and saves battery. Not recommended to disable." 
			name="ARCH POWER" action="schedfeat ARCH_POWER" label="ARCH POWER"/>

	</settingsPane>

	<settingsPane description="Here you can set all the settings for power save!" 
			name="CPU Idle and Power Settings">

		<spinner description="Sets the CPU Idle Mode. For best stability use Idle + LPA. Default: AFTR + LPA" 
			name="CPU Idle Mode" action="generic /sys/module/cpuidle_exynos4/parameters/enable_mask">
			<spinnerItem name="AFTR + LPA" value="3"/> 
			<spinnerItem name="Idle + LPA" value="2"/> 
			<spinnerItem name="AFTR only" value="1"/> 
			<spinnerItem name="Idle only" value="0"/> 
		</spinner>

		<seekBar description="Sets the sched_mc value which changes the CPU scheduler behavior for multi-core systems. 0 is Samsung kernel's default value which turns sched_mc off. Setting it to 1 means that the first core will be fully loaded before second core will start. Setting it to 2 will bias task wake-ups to semi-idle CPU package for power savings. Default: 0" 
			name="sched_mc" action="generic /sys/devices/system/cpu/sched_mc_power_savings" unit="" min="0" reversed="false" step="1" max="2"/>

		<seekBar description="This is for CPU BUS-FREQ UP-FREQ-Scaling, based on CPU load. It sets the the load threshold on which BUS frequency will rise. Default: 80%" 
			name="busfreq_up_threshold" action="generic /sys/devices/system/cpu/cpufreq/busfreq_up_threshold" 
			unit="%" min="23" reversed="false" step="1" max="90"/>

		<seekBar description="Maximum DEEP SLEEP CPU speed. Default is Linux Kernel default value: 600000kHz. Samsung's default value is 800000kHz. Setting this too low will stuck your device!" 
			name="scaling_max_suspend_freq" action="generic /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_suspend_freq" 
			unit="kHz" min="100000" reversed="false" step="100000" max="1000000"/>

		<seekBar description="Minimum DEEP SLEEP CPU speed Default: 200000kHz" 
			name="scaling_min_suspend_freq" action="generic /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_suspend_freq" 
			unit="kHz" min="100000" reversed="false" step="100000" max="1000000"/>

		<seekBar description="Minimum STANDBY (music playing and screen off) CPU speed. If music still shutter, rise frequency to 300000kHz/400000kHz. Default: 200000kHz"
			name="scaling_min_standby_freq" action="generic /tmp/standby_freq"
			unit="kHz" min="100000" reversed="false" step="100000" max="1000000"/>

		<seekBar description="For developer debug only! You can add small delay to cortex wakeup/sleep script. This will delay all function changes and the wakeup! Default: 0" 
			name="Cortex Wakeup Delay" action="generic /tmp/wakeup_delay"
			unit="Sec" min="0" reversed="false" step="1" max="5"/>

		<seekBar description="Here you can change Cortex Wakeup Boost. It will give you full CPU power but only for the set time. After that time, all is set back to normal."
			name="Cortex Wakeup Boost" action="generic /tmp/wakeup_boost"
			unit="Sec" min="0" reversed="false" step="1" max="15"/>

		<spinner description="This will set the DEEP SLEEP (screen off) CPU governor. Depends on cortex background process to be enabled." 
			name="Deep-Sleep! CPU Governor" action="generic /tmp/deep_sleep">
			<spinnerItem name="conservative" value="conservative"/> 
			<spinnerItem name="HYPER" value="HYPER"/> 
			<spinnerItem name="intellidemand" value="intellidemand"/> 
			<spinnerItem name="lulzactiveq" value="lulzactiveq"/> 
			<spinnerItem name="nightmare" value="nightmare"/>
			<spinnerItem name="ondemand" value="ondemand"/> 
			<spinnerItem name="pegasusq" value="pegasusq"/> 
			<spinnerItem name="Scary" value="Scary"/> 
			<spinnerItem name="sleepy" value="sleepy"/>
			<spinnerItem name="zenx" value="zenx"/> 

		</spinner>

	</settingsPane>

</settingsTab>

<settingsTab name="CPU VOLTAGE">

	<settingsPane description="CPU Voltage Controls. Frequencies above 1200Mhz are not allowed to be modified via STweaks. Voltage Range is 850~1350mV. Lower/higher is NOT SUPPORTED. All is done to prevent BUGS and SODS. USE this interface AT YOUR OWN RISK! If you get SOD before you can load this interface and can't fix your error, reset profiles from recovery. And think harder before you SOD your CPU with too much UV!" name="CPU Voltage Controls">

		<checkbox description="Main switch for Voltage Control! If disabled, all below settings have no effect! If you are using an external application or script to configure CPU voltage, don't tick this checkbox. Don't start to mod voltage before you enable this switch! It will not make any effect and you will have to set all to default, and tune again!" 
			name="CPU Voltage Main Switch" action="generic_cortex /tmp/cpu_voltage_switch" label="CPU Voltage Main Switch"/>

		<button description="Use this button to see what CPU Voltage is used right now!" name="Check Active CPU Voltage" action="push-actions/check_cpu_voltage" label="Check CPU Voltage"/>

		<seekBar description="CPU Voltage for 1200Mhz. Default: 1300mV"
			name="CPU Voltage 1200Mhz" action="cpu-voltage 1" unit="mV" min="1225" reversed="false" step="25" max="1350"/>

		<seekBar description="CPU Voltage for 1100Mhz. Default: 1250mV"
			name="CPU Voltage 1100Mhz" action="cpu-voltage 2" unit="mV" min="1175" reversed="false" step="25" max="1300"/>

		<seekBar description="CPU Voltage for 1000Mhz. Default: 1200mV"
			name="CPU Voltage 1000Mhz" action="cpu-voltage 3" unit="mV" min="1125" reversed="false" step="25" max="1250"/>

		<seekBar description="CPU Voltage for 900Mhz. Default: 1125mV"
			name="CPU Voltage 900Mhz" action="cpu-voltage 4" unit="mV" min="1050" reversed="false" step="25" max="1175"/>

		<seekBar description="CPU Voltage for 800Mhz. Default: 1075mV"
			name="CPU Voltage 800Mhz" action="cpu-voltage 5" unit="mV" min="1000" reversed="false" step="25" max="1125"/>

		<seekBar description="CPU Voltage for 700Mhz. Default: 1025mV"
			name="CPU Voltage 700Mhz" action="cpu-voltage 6" unit="mV" min="950" reversed="false" step="25" max="1075"/>

		<seekBar description="CPU Voltage for 600Mhz. Default: 1000mV"
			name="CPU Voltage 600Mhz" action="cpu-voltage 7" unit="mV" min="925" reversed="false" step="25" max="1050"/>

		<seekBar description="CPU Voltage for 500Mhz. Default: 975mV"
			name="CPU Voltage 500Mhz" action="cpu-voltage 8" unit="mV" min="900" reversed="false" step="25" max="1025"/>

		<seekBar description="CPU Voltage for 400Mhz. Default: 975mV"
			name="CPU Voltage 400Mhz" action="cpu-voltage 9" unit="mV" min="900" reversed="false" step="25" max="1025"/>

		<seekBar description="CPU Voltage for 300Mhz. Default: 975mV"
			name="CPU Voltage 300Mhz" action="cpu-voltage 10" unit="mV" min="900" reversed="false" step="25" max="1025"/>

		<seekBar description="CPU Voltage for 200Mhz. Default: 950mV"
			name="CPU Voltage 200Mhz" action="cpu-voltage 11" unit="mV" min="875" reversed="false" step="25" max="1000"/>

		<seekBar description="CPU Voltage for 100Mhz. Default: 925mV"
			name="CPU Voltage 100Mhz" action="cpu-voltage 12" unit="mV" min="850" reversed="false" step="25" max="975"/>

	</settingsPane>

</settingsTab>

<settingsTab name="GOVERNOR TUN./(AWAKE)">

	<settingsPane description="Here you can manage advanced governor settings. If cortexbrain 'background-process' and 'cpu' are running their values are valid only for AWAKE settings." name="Governor Parameters tuning.">

		<button description="Use this button to push all new changes to GOV core in real time! the sleep tuning will be auto added on screen off, to screen off gov." name="GOV Policy Install" action="push-actions/cpu_tuning_update" label="Push CPU Tuning To GOV Core"/>

		<seekBar description="This threshold is used as up threshold while sampling at frequencies less than freq_for_responsiveness. Above that, normal up_threshold is used. This gives us an option to make scaling aggressive/relaxed until a frequency and normal for higher frequencies. Again, during calculation of optimal frequency which should not trigger up policy, down threshold to consider is difference between up_threshold_at_min_freq and down_differential. (Only for PegasusQ) (default is 40)"
			name="up_threshold_at_min_freq" action="generic /tmp/up_threshold_at_min_freq" unit="%" min="1" reversed="false" step="1" max="100"/>

		<seekBar description="Measured as percentage, when load on CPU is equal to above up threshold, CPU is scaled Up. Lower value - early scale up, and vice-verse. (Only for HYPER, OnDemand, Intellimand, PegasusQ, Conservative, Scary, Sleepy)  (default is 75)"
			name="up_threshold" action="generic /tmp/up_threshold" unit="%" min="1" reversed="false" step="1" max="100"/>

		<seekBar description="This is same as the 'up_threshold' found for the ondemand governor but for the opposite direction. For example when set to its default value of 30 it means that if the CPU usage needs to be below 30% between samples to have the frequency decreased. (Only for Conservative, Scary) (default is 40)"
			name="down_threshold" action="generic /tmp/down_threshold" unit="%" min="1" reversed="false" step="1" max="100"/>

		<seekBar description="This threshold is used as up threshold while sampling at frequencies less than freq_for_responsiveness. Above that, normal inc_cpu_load is used. This gives us an option to make scaling aggressive/relaxed until a frequency and normal for higher frequencies. Again, during calculation of optimal frequency which should not trigger up policy, down threshold to consider is difference between inc_cpu_load_at_min_freq and freq_up_brake. (Only for Nightmare) (default is 40)"
			name="inc_cpu_load_at_min_freq" action="generic /tmp/inc_cpu_load_at_min_freq" unit="%" min="1" reversed="false" step="1" max="100"/>

		<seekBar description="The frequency at which governor scales CPU up. Load >= inc_cpu_load: cpu scaled up. (Only for lulzActiveQ, Nightmare) (default is 80)"
			name="inc_cpu_load" action="generic /tmp/inc_cpu_load" unit="%" min="10" reversed="false" step="1" max="100"/>

		<seekBar description="The frequency at which governor scales CPU down. Load less than inc_cpu_load: cpu scaled down. (Only for lulzActiveQ, Nightmare) (default is 60)"
			name="dec_cpu_load" action="generic /tmp/dec_cpu_load" unit="%" min="10" reversed="false" step="1" max="100"/>

		<seekBar description="The frequency at which governor scales CPU up. Avg Load >= up_avg_load: Cpu Hotplug IN. (Only for Nightmare) (default is 65)"
			name="up_avg_load" action="generic /tmp/up_avg_load" unit="%" min="10" reversed="false" step="1" max="100"/>

		<seekBar description="The frequency at which governor scales CPU down. Avg Load less than down_avg_load: Cpu Hotplug OUT. (Only for Nightmare) (default is 30)"
			name="down_avg_load" action="generic /tmp/down_avg_load" unit="%" min="10" reversed="false" step="1" max="100"/>

		<seekBar description="No of samples to evaluate load to scale CPU Up. After cpu_up_rate samples are finished for a frequency, CPU scale-Up logic is executed. In other words - before scaling Up, cpu_up_rate*up_sample_time micro seconds are spend at a frequency. (Only for lulzActiveQ, PegasusQ, Nightmare) (default is 10)"
			name="cpu_up_rate" action="generic /tmp/cpu_up_rate" unit="%" min="1" reversed="false" step="1" max="100"/>

		<seekBar description="No of samples to evaluate load to scale CPU Down. After CPU_down_rate samples are finished for a frequency, CPU scale-Down logic is executed. In other words - before scaling Down, cpu_down_rate*down_sample_time micro seconds are spend at a frequency. (Only for lulzActiveQ, PegasusQ, Nightmare) (default is 20)"
			name="cpu_down_rate" action="generic /tmp/cpu_down_rate" unit="%" min="1" reversed="false" step="1" max="100"/>

		<seekBar description="Measured in uS and actual meaning being Sampling Interval, this factor determines how often the governor should poll for CPU usage in terms of frequency and load percentage to make scaling decisions - either scale CPU Up or scale it Down. (Only for HYPER, OnDemand, Intellimand, PegasusQ, Nightmare, Conservative, Scary, Sleepy) (default is 60000)"
			name="sampling_rate" action="generic /tmp/sampling_rate" unit=" uS" min="1000" reversed="false" step="1000" max="120000"/>

		<seekBar description="Sets hot plug sampling intervals for screen-on state when the second core is on. (Only for lulzActiveQ) (default is 40000)"
			name="hotplug_sampling_rate" action="generic /tmp/hotplug_sampling_rate" unit=" uS" min="0" reversed="false" step="1000" max="120000"/>

		<seekBar description="Acts as a multiplier for sampling interval for re-evaluating the load when CPU is truly busy and is on highest clock frequency (policy max). (Only for Nightmare) (default is 1)"
			name="sampling_up_factor" action="generic /tmp/sampling_up_factor" unit=" int" min="1" reversed="false" step="1" max="10"/>

		<seekBar description="Acts as a multiplier for sampling interval for re-evaluating the load when CPU is truly busy and is on highest clock frequency (policy max). Setting to 1 makes no difference and causes CPU to immediately scale down from highest frequency. Sampling down factor is NOT valid for lower frequencies and low load conditions. Note that CPU is scaled up to max frequency when max_load_freq is greater than up_threshold*current frequency. (or to cur_freq + (freq_step * policy.max_freq) whichever is smaller) Max_load_freq is an arbitrary frequency calculated as the maximum of load_frequencies. (Only for HYPER, Ondemand, Intellimand, PegasusQ, Conservartive, Nightmare, Scary, Sleepy) (default is 1)"
			name="sampling_down_factor" action="generic /tmp/sampling_down_factor" unit=" int" min="1" reversed="false" step="1" max="10"/>

		<seekBar description="Sampling time to scale cpu up. (Only for lulzActiveQ) (default is 40000)"
			name="up_sample_time" action="generic /tmp/up_sample_time" unit=" uS" min="1000" reversed="false" step="1000" max="120000"/>

		<seekBar description="Sampling time to scale cpu down. (Only for lulzActiveQ) (default is 20000)"
			name="down_sample_time" action="generic /tmp/down_sample_time" unit=" uS" min="1000" reversed="false" step="1000" max="120000"/>

		<seekBar description="Up threshold frequency to turn second core On, when some other conditions is also met. ie If (minimum frequency greater than or equal to hotplug_freq 1 1 and run queue length is greater than hotplug_rq_1_1) Hotplug IN Second Core. Higher value corresponds to delay in turning on second core. (Only for lulzActiveQ, PegasusQ, Nightmare) (default is 500000)"
			name="hotplug_freq_1_1" action="generic /tmp/hotplug_freq_1_1" unit="kHz" min="100000" reversed="false" step="100000" max="1200000"/>

		<seekBar description="Down threshold frequency to turn second core Off, when some other conditions is also met. ie If (maximum frequency less than hotplug_freq 2 0 and run queue length is less than or equal to hotplug_rq_2_0) Hotplug OUT Second Core. Lower value corresponds to delay in turning off second core. (Only for lulzActiveQ, PegasusQ, Nightmare) (default is 200000)"
			name="hotplug_freq_2_0" action="generic /tmp/hotplug_freq_2_0" unit="kHz" min="100000" reversed="false" step="100000" max="1200000"/>

		<seekBar description="Threshold run queue length for second core to turn on. (Only for lulzActiveQ, PegasusQ, Nightmare) (default is 100)"
			name="hotplug_rq_1_1" action="generic /tmp/hotplug_rq_1_1" unit=" queue length" min="100" reversed="false" step="10" max="600"/>

		<seekBar description="Threshold run queue length for second core to turn off. (Only for lulzActiveQ, PegasusQ, Nightmare) (default is 100)"
			name="hotplug_rq_2_0" action="generic /tmp/hotplug_rq_2_0" unit=" queue length" min="100" reversed="false" step="10" max="600"/>

		<spinner description="Set the HOTPLUG Compare Level to turn on the Second Core/Frequency scale. 0 = History Load Based (Default), 1 = Current Load Based. (Only for Nightmare)" 
			name="hotplug_compare_level" action="generic /tmp/hotplug_compare_level">
			<spinnerItem name="History Load Based" value="0"/> 
			<spinnerItem name="Current Load Based" value="1"/> 
		</spinner>

		<seekBar description="Defines how much as a percentage of maximum frequency, governor should increase CPU frequency each time CPU load reaches up_threshold or inc_cpu_load. (Only for HYPER, Ondemand, PegasusQ, Nightmare, Conservative, Scary) (default is 30)"
			name="freq_step" action="generic /tmp/freq_step" unit="%" min="0" reversed="false" step="1" max="100"/>

		<seekBar description="Defines how much as a percentage of maximum frequency, governor should decrease CPU frequency each time CPU load reaches dec_cpu_load. (Only for Nightmare) (default is 5)"
			name="freq_step_dec" action="generic /tmp/freq_step_dec" unit="%" min="0" reversed="false" step="1" max="100"/>

		<seekBar description="Brake scale up frequency when load >= inc_cpu_load. (Only for Nightmare) (default is 5)"
			name="freq_up_brake" action="generic /tmp/freq_up_brake" unit="step" min="0" reversed="false" step="1" max="100"/>

		<seekBar description="After spending sampling_down_factor*sampling_rate micro seconds at maximum frequency on high load, governor samples the load again to calculate an approx target frequency to scale-down-to which should not trigger up_threshold in the next sample. (Triggering up threshold may cause jumping to max frequency again). Max_load_freq is checked against (up_threshold - down_differential) * current frequency. If found to be smaller, CPU is scaled down to a target frequency as described above. Down_differential also act as the factor to prevent aggressive scale down. (Only for HYPER, Ondemand, Intellimand, PegasusQ, Sleepy) (default is 5)"
			name="down_differential" action="generic /tmp/down_differential" unit=" int" min="1" reversed="false" step="1" max="80"/>

		<seekBar description="No of scale up steps when load >= inc_cpu_load. (Only for lulzActiveQ) (default is 2)"
			name="pump_up_step" action="generic /tmp/pump_up_step" unit="step" min="0" reversed="false" step="1" max="16"/>

		<seekBar description="No of scale down steps when load less than dec_cpu_load. (Only for lulzActiveQ) (default is 1)"
			name="pump_down_step" action="generic /tmp/pump_down_step" unit="step" min="0" reversed="false" step="1" max="16"/>

		<seekBar description="Until freq_for_responsiveness, Up Threshold considered for sampling load is up_threshold_at_min_freq. Also during the part where CPU is at maximum load frequency, governor need to find the optimal frequency as the next frequency - which should not trigger up_threshold in the next sampling. When such a frequency_next is found to be a) less than freq_for_responsiveness b) will not trigger down_threshold in the next sample, then the optimal frequency is set to freq_for_responsiveness. (Only for HYPER, PegasusQ, Nightmare) (default is 400000)"
			name="freq_for_responsiveness" action="generic /tmp/freq_for_responsiveness" unit="kHz" min="100000" reversed="false" step="100000" max="1200000"/>

		<seekBar description="Steps in frequency table to be used when screen-off. Example: If available freqs are 1600 1400 1200 1000 800 500 200 100 (L0 to L7) and screen_off_min_step=5 then 100,200 and 500 (L5 to L7) will be used during screen-off depending on the demand. (Only for lulzActiveQ) (default is 11)"
			name="screen_off_min_step" action="generic /tmp/screen_off_min_step" unit="step" min="1" reversed="false" step="1" max="30"/>

		<seekBar description="[lulzActiveQ: Input boost will automatically jump the phone to the hispeed_freq when you touch the screen to help prevent lag]. [ZenX: Hi speed to bump to from lo speed when load burst] (Only for lulzActiveQ, ZenX) (default is 1200000)"
			name="hispeed_freq" action="generic /tmp/hispeed_freq" unit="kHz" min="100000" reversed="false" step="100000" max="1200000"/>

		<seekBar description="Lower values result in higher CPU speeds. (Only for ZenX) (default is 90)"
			name="target_loads" action="generic /tmp/target_loads" unit="%" min="10" reversed="false" step="1" max="100"/>

		<seekBar description="Go to hi speed freq when CPU load at or above this value. (Only for ZenX) (default is 99)"
			name="go_hispeed_load" action="generic /tmp/go_hispeed_load" unit="%" min="10" reversed="false" step="1" max="100"/>

		<seekBar description="Unplug auxillary CPUs below this value. (Only for ZenX) (default is 35)"
			name="unplug_load_cpu1" action="generic /tmp/unplug_load_cpu1" unit="%" min="10" reversed="false" step="1" max="100"/>

		<seekBar description="Unplug auxillary CPUs below this value. (Only for ZenX) (default is 50)"
			name="unplug_load_cpu2" action="generic /tmp/unplug_load_cpu2" unit="%" min="10" reversed="false" step="1" max="100"/>

		<seekBar description="Unplug auxillary CPUs below this value. (Only for ZenX) (default is 50)"
			name="unplug_load_cpumore" action="generic /tmp/unplug_load_cpumore" unit="%" min="10" reversed="false" step="1" max="100"/>

		<seekBar description="Number of sampling periods to take average CPU load across for CPU add. (Only for ZenX) (default is 30)"
			name="hot_add_sampling_periods" action="generic /tmp/hot_add_sampling_periods" unit="%" min="10" reversed="false" step="10" max="500"/>

		<seekBar description="Number of sampling periods when suspended to take average CPU load across for CPU add. (Only for ZenX) (default is 100)"
			name="hot_add_sampling_periods_suspended" action="generic /tmp/hot_add_sampling_periods_suspended" unit="%" min="10" reversed="false" step="10" max="500"/>

		<seekBar description="Number of sampling periods to take average CPU load across for CPU removal. (Only for ZenX) (default is 100)"
			name="hot_remove_sampling_periods" action="generic /tmp/hot_remove_sampling_periods" unit="%" min="10" reversed="false" step="10" max="500"/>

		<seekBar description="Number of sampling periods when suspended to take average CPU load across for CPU removal. (Only for ZenX) (default is 50)"
			name="hot_remove_sampling_periods_suspended" action="generic /tmp/hot_remove_sampling_periods_suspended" unit="%" min="10" reversed="false" step="10" max="500"/>

		<seekBar description="Wait this long before raising speed above hispeed, by default a single timer interval. (Only for ZenX) (default is 20000)"
			name="above_hispeed_delay" action="generic /tmp/above_hispeed_delay" unit=" uS" min="1000" reversed="false" step="1000" max="120000"/>

		<seekBar description="The minimum amount of time to spend at a frequency before we can ramp down. (Only for ZenX) (default is 40000)"
			name="min_sample_time" action="generic /tmp/min_sample_time" unit=" uS" min="1000" reversed="false" step="1000" max="120000"/>

		<seekBar description="The sample rate of the timer used to increase frequency. (Only for ZenX) (default is 20000)"
			name="timer_rate" action="generic /tmp/timer_rate" unit=" uS" min="1000" reversed="false" step="1000" max="120000"/>

		<seekBar description="The sample rate of the timer used to increase frequency when suspended. (Only for ZenX) (default is 30000)"
			name="timer_rate_suspended" action="generic /tmp/timer_rate_suspended" unit=" uS" min="1000" reversed="false" step="1000" max="120000"/>

		<seekBar description="Max additional time to wait in idle, beyond timer_rate, at speeds above minimum before wakeup to reduce speed, or -1 if unnecessary. (Only for ZenX) (default is 80000)"
			name="timer_slack" action="generic /tmp/timer_slack" unit=" uS" min="1000" reversed="false" step="1000" max="120000"/>

		<spinner description="Non-zero means indefinite speed boost active. (Only for ZenX) (Default is 0)" 
			name="boost" action="generic /tmp/boost">
			<spinnerItem name="No" value="0"/> 
			<spinnerItem name="Yes" value="1"/> 
		</spinner>

		<seekBar description="Duration of a boot pulse in usecs. (Only for ZenX) (default is 40000)"
			name="boostpulse_duration" action="generic /tmp/boostpulse_duration" unit=" uS" min="1000" reversed="false" step="1000" max="120000"/>

	</settingsPane>

</settingsTab>

<settingsTab name="GOVERNOR TUN./(SLEEP)">

	<settingsPane description="Here you can manage advanced governor settings. If cortexbrain 'background-process' and 'cpu' are running their values are valid only for SLEEP settings." name="Governor Parameters tuning.">

		<seekBar description="This threshold is used as up threshold while sampling at frequencies less than freq_for_responsiveness. Above that, normal up_threshold is used. This gives us an option to make scaling aggressive/relaxed until a frequency and normal for higher frequencies. Again, during calculation of optimal frequency which should not trigger up policy, down threshold to consider is difference between up_threshold_at_min_freq and down_differential. (Only for PegasusQ) (default is 70)"
			name="up_threshold_at_min_freq_sleep" action="generic /tmp/up_threshold_at_min_freq_sleep" unit="%" min="1" reversed="false" step="1" max="100"/>

		<seekBar description="Measured as percentage, when load on CPU is equal to above up threshold, CPU is scaled Up. Lower value - early scale up, and vice-verse. (Only for HYPER, OnDemand, Intellimand, PegasusQ, Conservative, Scary, Sleepy) (default is 70)"
			name="up_threshold_sleep" action="generic /tmp/up_threshold_sleep" unit="%" min="1" reversed="false" step="1" max="100"/>

		<seekBar description="This is same as the 'up_threshold' found for the ondemand governor but for the opposite direction. For example when set to its default value of 30 it means that if the CPU usage needs to be below 30% between samples to have the frequency decreased. (Only for Conservative, Scary) (default is 30)"
			name="down_threshold_sleep" action="generic /tmp/down_threshold_sleep" unit="%" min="1" reversed="false" step="1" max="100"/>

		<seekBar description="This threshold is used as up threshold while sampling at frequencies less than freq_for_responsiveness. Above that, normal inc_cpu_load is used. This gives us an option to make scaling aggressive/relaxed until a frequency and normal for higher frequencies. Again, during calculation of optimal frequency which should not trigger up policy, down threshold to consider is difference between inc_cpu_load_at_min_freq and down_differential. (Only for Nightmare) (default is 60)"
			name="inc_cpu_load_at_min_freq_sleep" action="generic /tmp/inc_cpu_load_at_min_freq_sleep" unit="%" min="1" reversed="false" step="1" max="100"/>

		<seekBar description="The frequency at which governor scales CPU up. Load >= inc_cpu_load: cpu scaled up. (Only for lulzActiveQ, Nightmare) (default is 70)"
			name="inc_cpu_load_sleep" action="generic /tmp/inc_cpu_load_sleep" unit="%" min="10" reversed="false" step="1" max="100"/>

		<seekBar description="The frequency at which governor scales CPU down. Load less than inc_cpu_load: cpu scaled down. (Only for lulzActiveQ, Nightmare) (default is 70)"
			name="dec_cpu_load_sleep" action="generic /tmp/dec_cpu_load_sleep" unit="%" min="10" reversed="false" step="1" max="100"/>

		<seekBar description="The frequency at which governor scales CPU up. Avg Load >= up_avg_load: Cpu Hotplug IN. (Only for Nightmare) (default is 65)"
			name="up_avg_load_sleep" action="generic /tmp/up_avg_load_sleep" unit="%" min="10" reversed="false" step="1" max="100"/>

		<seekBar description="The frequency at which governor scales CPU down. Avg Load less than down_avg_load: Cpu Hotplug OUT. (Only for Nightmare) (default is 30)"
			name="down_avg_load_sleep" action="generic /tmp/down_avg_load_sleep" unit="%" min="10" reversed="false" step="1" max="100"/>

		<seekBar description="No of samples to evaluate load to scale CPU Up. After cpu_up_rate samples are finished for a frequency, CPU scale-Up logic is executed. In other words - before scaling Up, cpu_up_rate*up_sample_time micro seconds are spend at a frequency. (Only for lulzActiveQ, PegasusQ, Nightmare) (default is 20)"
			name="cpu_up_rate_sleep" action="generic /tmp/cpu_up_rate_sleep" unit="%" min="1" reversed="false" step="1" max="100"/>

		<seekBar description="No of samples to evaluate load to scale CPU Down. After CPU_down_rate samples are finished for a frequency, CPU scale-Down logic is executed. In other words - before scaling Down, cpu_down_rate*down_sample_time micro seconds are spend at a frequency. (Only for lulzActiveQ, PegasusQ, Nightmare) (default is 20)"
			name="cpu_down_rate_sleep" action="generic /tmp/cpu_down_rate_sleep" unit="%" min="1" reversed="false" step="1" max="100"/>

		<seekBar description="Measured in uS and actual meaning being Sampling Interval, this factor determines how often the governor should poll for CPU usage in terms of frequency and load percentage to make scaling decisions - either scale CPU Up or scale it Down. (Only for HYPER, OnDemand, Intellimand, PegasusQ, Nightmare, Conservative, Scary, Sleepy) (default is 70000)"
			name="sampling_rate_sleep" action="generic /tmp/sampling_rate_sleep" unit=" uS" min="1000" reversed="false" step="1000" max="120000"/>

		<seekBar description="Sets hot plug sampling intervals for screen-on state when the second core is on. (Only for lulzActiveQ) (default is 15000)"
			name="hotplug_sampling_rate_sleep" action="generic /tmp/hotplug_sampling_rate_sleep" unit=" uS" min="0" reversed="false" step="1000" max="120000"/>

		<seekBar description="Acts as a multiplier for sampling interval for re-evaluating the load when CPU is truly busy and is on highest clock frequency (policy max). (Only for Nightmare) (default is 1)"
			name="sampling_up_factor_sleep" action="generic /tmp/sampling_up_factor_sleep" unit=" int" min="1" reversed="false" step="1" max="10"/>

		<seekBar description="Acts as a multiplier for sampling interval for re-evaluating the load when CPU is truly busy and is on highest clock frequency (policy max). Setting to 1 makes no difference and causes CPU to immediately scale down from highest frequency. Sampling down factor is NOT valid for lower frequencies and low load conditions. Note that CPU is scaled up to max frequency when max_load_freq is greater than up_threshold*current frequency. (or to cur_freq + (freq_step * policy.max_freq) whichever is smaller) Max_load_freq is an arbitrary frequency calculated as the maximum of load_frequencies. (Only for HYPER, Ondemand, Intellimand, PegasusQ, Conservartive, Nightmare, Scary, Sleepy) (default is 1)"
			name="sampling_down_factor_sleep" action="generic /tmp/sampling_down_factor_sleep" unit=" int" min="1" reversed="false" step="1" max="10"/>

		<seekBar description="Sampling time to scale cpu up. (Only for lulzActiveQ) (default is 60000)" 
			name="up_sample_time_sleep" action="generic /tmp/up_sample_time_sleep" unit=" uS" min="1000" reversed="false" step="1000" max="120000"/>

		<seekBar description="Sampling time to scale cpu down. (Only for lulzActiveQ) (default is 10000)" 
			name="down_sample_time_sleep" action="generic /tmp/down_sample_time_sleep" unit=" uS" min="1000" reversed="false" step="1000" max="120000"/>

		<seekBar description="Up threshold frequency to turn second core On, when some other conditions is also met. ie If (minimum frequency greater than or equal to hotplug_freq 1 1 and run queue length is greater than hotplug_rq_1_1) Hotplug IN Second Core. Higher value corresponds to delay in turning on second core. (Only for lulzActiveQ, PegasusQ, Nightmare) (default is 500000)"
			name="hotplug_freq_1_1_sleep" action="generic /tmp/hotplug_freq_1_1_sleep" unit="kHz" min="100000" reversed="false" step="100000" max="1200000"/>

		<seekBar description="Down threshold frequency to turn second core Off, when some other conditions is also met. ie If (maximum frequency less than hotplug_freq 2 0 and run queue length is less than or equal to hotplug_rq_2_0) Hotplug OUT Second Core. Lower value corresponds to delay in turning off second core. (Only for lulzActiveQ, PegasusQ, Nightmare) (default is 200000)"
			name="hotplug_freq_2_0_sleep" action="generic /tmp/hotplug_freq_2_0_sleep" unit="kHz" min="100000" reversed="false" step="100000" max="1200000"/>

		<seekBar description="Threshold run queue length for second core to turn on. (Only for lulzActiveQ, PegasusQ, Nightmare) (default is 100)"
			name="hotplug_rq_1_1_sleep" action="generic /tmp/hotplug_rq_1_1_sleep" unit=" queue length" min="100" reversed="false" step="10" max="600"/>

		<seekBar description="Threshold run queue length for second core to turn off. (Only for lulzActiveQ, PegasusQ, Nightmare) (default is 100)"
			name="hotplug_rq_2_0_sleep" action="generic /tmp/hotplug_rq_2_0_sleep" unit=" queue length" min="100" reversed="false" step="10" max="600"/>

		<spinner description="Set the HOTPLUG Compare Level to turn on the Second Core/Frequency scale. 0 = History Load Based (Default), 1 = Current Load Based. (Only for Nightmare)" 
			name="hotplug_compare_level_sleep" action="generic /tmp/hotplug_compare_level_sleep">
			<spinnerItem name="History Load Based" value="0"/> 
			<spinnerItem name="Current Load Based" value="1"/> 
		</spinner>

		<seekBar description="Defines how much as a percentage of maximum frequency, governor should increase CPU frequency each time CPU load reaches up_threshold or inc_cpu_load. (Only for HYPER, Ondemand, PegasusQ, Nightmare, Conservative, Scary) (default is 40)"
			name="freq_step_sleep" action="generic /tmp/freq_step_sleep" unit="%" min="0" reversed="false" step="1" max="100"/>

		<seekBar description="Defines how much as a percentage of maximum frequency, governor should decrease CPU frequency each time CPU load reaches dec_cpu_load. (Only for Nightmare) (default is 10)"
			name="freq_step_dec_sleep" action="generic /tmp/freq_step_dec_sleep" unit="%" min="0" reversed="false" step="1" max="100"/>

		<seekBar description="Brake scale up frequency when load >= inc_cpu_load. (Only for Nightmare) (default is 10)"
			name="freq_up_brake_sleep" action="generic /tmp/freq_up_brake_sleep" unit="step" min="0" reversed="false" step="1" max="100"/>

		<seekBar description="After spending sampling_down_factor*sampling_rate micro seconds at maximum frequency on high load, governor samples the load again to calculate an approx target frequency to scale-down-to which should not trigger up_threshold in the next sample. (Triggering up threshold may cause jumping to max frequency again). Max_load_freq is checked against (up_threshold - down_differential) * current frequency. If found to be smaller, CPU is scaled down to a target frequency as described above. Down_differential also act as the factor to prevent aggressive scale down. (Only for HYPER, Ondemand, Intellimand, PegasusQ, Sleepy) (default is 5)"
			name="down_differential_sleep" action="generic /tmp/down_differential_sleep" unit=" int" min="1" reversed="false" step="1" max="80"/>

		<seekBar description="No of scale up steps when load >= inc_cpu_load. (Only for lulzActiveQ) (default is 1)"
			name="pump_up_step_sleep" action="generic /tmp/pump_up_step_sleep" unit="step" min="0" reversed="false" step="1" max="16"/>

		<seekBar description="No of scale down steps when load less than dec_cpu_load. (Only for lulzActiveQ) (default is 3)"
			name="pump_down_step_sleep" action="generic /tmp/pump_down_step_sleep" unit="step" min="0" reversed="false" step="1" max="16"/>

		<seekBar description="Until freq_for_responsiveness, Up Threshold considered for sampling load is up_threshold_at_min_freq. Also during the part where CPU is at maximum load frequency, governor need to find the optimal frequency as the next frequency - which should not trigger up_threshold in the next sampling. When such a frequency_next is found to be a) less than freq_for_responsiveness b) will not trigger down_threshold in the next sample, then the optimal frequency is set to freq_for_responsiveness. (Only for HYPER, PegasusQ, Nightmare) (default is 200000)"
			name="freq_for_responsiveness_sleep" action="generic /tmp/freq_for_responsiveness_sleep" unit="kHz" min="100000" reversed="false" step="100000" max="1200000"/>

		<seekBar description="[lulzActiveQ: Input boost will automatically jump the phone to the hispeed_freq when you touch the screen to help prevent lag]. [ZenX: Hi speed to bump to from lo speed when load burst] (Only for lulzActiveQ, ZenX) (default is 400000)"
			name="hispeed_freq_sleep" action="generic /tmp/hispeed_freq_sleep" unit="kHz" min="100000" reversed="false" step="100000" max="1200000"/>

		<seekBar description="Lower values result in higher CPU speeds. (Only for ZenX) (default is 90)"
			name="target_loads_sleep" action="generic /tmp/target_loads_sleep" unit="%" min="10" reversed="false" step="1" max="100"/>

		<seekBar description="Go to hi speed freq when CPU load at or above this value. (Only for ZenX) (default is 99)"
			name="go_hispeed_load_sleep" action="generic /tmp/go_hispeed_load_sleep" unit="%" min="10" reversed="false" step="1" max="100"/>

		<seekBar description="Unplug auxillary CPUs below this value. (Only for ZenX) (default is 35)"
			name="unplug_load_cpu1_sleep" action="generic /tmp/unplug_load_cpu1_sleep" unit="%" min="10" reversed="false" step="1" max="100"/>

		<seekBar description="Unplug auxillary CPUs below this value. (Only for ZenX) (default is 50)"
			name="unplug_load_cpu2_sleep" action="generic /tmp/unplug_load_cpu2_sleep" unit="%" min="10" reversed="false" step="1" max="100"/>

		<seekBar description="Unplug auxillary CPUs below this value. (Only for ZenX) (default is 50)"
			name="unplug_load_cpumore_sleep" action="generic /tmp/unplug_load_cpumore_sleep" unit="%" min="10" reversed="false" step="1" max="100"/>

		<seekBar description="Number of sampling periods to take average CPU load across for CPU add. (Only for ZenX) (default is 30)"
			name="hot_add_sampling_periods_sleep" action="generic /tmp/hot_add_sampling_periods_sleep" unit="%" min="10" reversed="false" step="10" max="500"/>

		<seekBar description="Number of sampling periods to take average CPU load across for CPU removal. (Only for ZenX) (default is 100)"
			name="hot_remove_sampling_periods_sleep" action="generic /tmp/hot_remove_sampling_periods_sleep" unit="%" min="10" reversed="false" step="10" max="500"/>

		<seekBar description="Wait this long before raising speed above hispeed, by default a single timer interval. (Only for ZenX) (default is 20000)"
			name="above_hispeed_delay_sleep" action="generic /tmp/above_hispeed_delay_sleep" unit=" uS" min="1000" reversed="false" step="1000" max="120000"/>

		<seekBar description="The minimum amount of time to spend at a frequency before we can ramp down. (Only for ZenX) (default is 40000)"
			name="min_sample_time_sleep" action="generic /tmp/min_sample_time_sleep" unit=" uS" min="1000" reversed="false" step="1000" max="120000"/>

		<seekBar description="The sample rate of the timer used to increase frequency. (Only for ZenX) (default is 20000)"
			name="timer_rate_sleep" action="generic /tmp/timer_rate_sleep" unit=" uS" min="1000" reversed="false" step="1000" max="120000"/>

		<seekBar description="Max additional time to wait in idle, beyond timer_rate, at speeds above minimum before wakeup to reduce speed, or -1 if unnecessary. (Only for ZenX) (default is 80000)"
			name="timer_slack_sleep" action="generic /tmp/timer_slack_sleep" unit=" uS" min="1000" reversed="false" step="1000" max="120000"/>

		<spinner description="Non-zero means indefinite speed boost active. (Only for ZenX) (Default is 0)" 
			name="boost_sleep" action="generic /tmp/boost_sleep">
			<spinnerItem name="No" value="0"/> 
			<spinnerItem name="Yes" value="1"/> 
		</spinner>

		<seekBar description="Duration of a boot pulse in usecs. (Only for ZenX) (default is 40000)"
			name="boostpulse_duration_sleep" action="generic /tmp/boostpulse_duration_sleep" unit=" uS" min="1000" reversed="false" step="1000" max="120000"/>

	</settingsPane>

</settingsTab>

<settingsTab name="GPU">
	<settingsPane description="GPU Frequency/voltage/steps/utilization settings. Defaults frequencies are 108, 160, 200, 267 and 267. Voltage defaults are 900mV, 950mV, 1000mV, 1000mV and 1000mV." 
			name="GPU Control">

		<checkbox description="Enabling VPLL mode may be unstable on some devices so do not complain if your device lags or crashes (SOD). If you don't use VPLL Mode, the following frequency steps will be unavailable: 330, 440, 520. VPLL is a new frqeuency range to give some users more GPU performance. USE AT YOUR OWN RISK!" 
			name="VPLL Mode" action="generic01 /sys/module/mali/parameters/mali_use_vpll" label="VPLL Mode"/>

		<seekBar description="Here you can change GPU utilization timeout calculation. Closer to 100 (1sec) and you'll get faster GPU response in steps jump on load, but more battery is drained. CM10 default: 250(2.5sec)"
			name="GPU Utilization Timeout" action="generic /sys/module/mali/parameters/mali_gpu_utilization_timeout"
			unit="MSec" min="100" reversed="false" step="50" max="500"/>

		<spinner description="Changes the first (lowest) GPU frequency step" name="GPU Frequency Step 1" action="gpu-freq 1">
			<spinnerItem name="267MHz" value="267"/> 
			<spinnerItem name="200MHz" value="200"/> 
			<spinnerItem name="160MHz" value="160"/> 
			<spinnerItem name="108MHz" value="108"/> 
			<spinnerItem name="62MHz" value="62"/> 
			<spinnerItem name="54MHz" value="54"/> 
		</spinner>

		<spinner description="Changes the second GPU frequency step" name="GPU Frequency Step 2" action="gpu-freq 2">
			<spinnerItem name="330MHz" value="330"/> 
			<spinnerItem name="267MHz" value="267"/> 
			<spinnerItem name="200MHz" value="200"/> 
			<spinnerItem name="160MHz" value="160"/> 
			<spinnerItem name="108MHz" value="108"/> 
			<spinnerItem name="62MHz" value="62"/> 
		</spinner>

		<spinner description="Changes the third GPU frequency step. WARNING! 400MHz needs 1100mV~1200mV. Above 1200mV you risk to burn your chip!" 
			name="GPU Frequency Step 3" action="gpu-freq 3">
			<spinnerItem name="400MHz" value="400"/> 
			<spinnerItem name="330MHz" value="330"/> 
			<spinnerItem name="267MHz" value="267"/> 
			<spinnerItem name="200MHz" value="200"/> 
			<spinnerItem name="160MHz" value="160"/> 
			<spinnerItem name="108MHz" value="108"/> 
		</spinner>

		<spinner description="Changes the fourth GPU frequency step. WARNING! 400,440,520MHz needs 1100mV~1200mV. Above 1200mV you risk to burn your chip!" 
			name="GPU Frequency Step 4" action="gpu-freq 4">
			<spinnerItem name="520MHz" value="520"/> 
			<spinnerItem name="440MHz" value="440"/> 
			<spinnerItem name="400MHz" value="400"/> 
			<spinnerItem name="330MHz" value="330"/> 
			<spinnerItem name="267MHz" value="267"/> 
			<spinnerItem name="200MHz" value="200"/> 
			<spinnerItem name="160MHz" value="160"/> 
		</spinner>

		<spinner description="Changes the fifth GPU frequency step. WARNING! 400,440,520Mhz needs 1100mV~1200mV. Above 1200mV you risk to burn your chip!" 
			name="GPU Frequency Step 5" action="gpu-freq 5">
			<spinnerItem name="520MHz" value="520"/> 
			<spinnerItem name="440MHz" value="440"/> 
			<spinnerItem name="400MHz" value="400"/> 
			<spinnerItem name="330MHz" value="330"/> 
			<spinnerItem name="267MHz" value="267"/> 
			<spinnerItem name="200MHz" value="200"/> 
		</spinner>

	</settingsPane>

	<settingsPane description="GPU Voltage Levels: The defaults are 900, 950, 950, 1000 and 1050. WARNING! Voltage above 1200mV can put your device to risk! Do not blame me if GPU chip burned." 
			name="GPU Voltage Levels">

		<seekBar description="GPU Voltage for the first step" 
			name="GPU Voltage Level1" action="gpu-voltage 1" unit="mV" min="800" reversed="false" step="50" max="1300"/>

		<seekBar description="GPU Voltage for the second step" 
			name="GPU Voltage Level2" action="gpu-voltage 2" unit="mV" min="800" reversed="false" step="50" max="1300"/>

		<seekBar description="GPU Voltage for the third step" 
			name="GPU Voltage Level3" action="gpu-voltage 3" unit="mV" min="800" reversed="false" step="50" max="1300"/>

		<seekBar description="GPU Voltage for the fourth step" 
			name="GPU Voltage Level4" action="gpu-voltage 4" unit="mV" min="800" reversed="false" step="50" max="1300"/>

		<seekBar description="GPU Voltage for the fifth step" 
			name="GPU Voltage Level5" action="gpu-voltage 5" unit="mV" min="800" reversed="false" step="50" max="1300"/>

	</settingsPane>

		<settingsPane description="GPU load thresholds to change between frequency steps." name="GPU Thresholds">

		<seekBar description="GPU threshold to jump up from first to second step" 
			name="GPU Threshold 1-UP" action="gpu-thresh 1UP" unit="%" min="0" reversed="false" step="5" max="100"/>

		<seekBar description="GPU threshold to jump down from second to first step" 
			name="GPU Threshold 2-DOWN" action="gpu-thresh 2DOWN" unit="%" min="0" reversed="false" step="5" max="100"/>

		<seekBar description="GPU threshold to jump up from second to third step" 
			name="GPU Threshold 2-UP" action="gpu-thresh 2UP" unit="%" min="0" reversed="false" step="5" max="100"/>

		<seekBar description="GPU threshold to jump down from third to second step" 
			name="GPU Threshold 3-DOWN" action="gpu-thresh 3DOWN" unit="%" min="0" reversed="false" step="5" max="100"/>

		<seekBar description="GPU threshold to jump up from third to fourth step" 
			name="GPU Threshold 3-UP" action="gpu-thresh 3UP" unit="%" min="0" reversed="false" step="5" max="100"/>

		<seekBar description="GPU threshold to jump down from fourth to third step" 
			name="GPU Threshold 4-DOWN" action="gpu-thresh 4DOWN" unit="%" min="0" reversed="false" step="5" max="100"/>

		<seekBar description="GPU threshold to jump up from fourth to fifth step" 
			name="GPU Threshold 4-UP" action="gpu-thresh 4UP" unit="%" min="0" reversed="false" step="5" max="100"/>

		<seekBar description="GPU threshold to jump down from fifth to fourth step" 
			name="GPU Threshold 5-DOWN" action="gpu-thresh 5DOWN" unit="%" min="0" reversed="false" step="5" max="100"/>

	</settingsPane>

</settingsTab>

<settingsTab name="Screen">

	<settingsPane description="Brightness Curve settings. Modifies auto-brightness behavior." name="Brightness Curve">

		<seekBar description="Sets touchscreen move sensitivity (vitalij value)." 
			name="TouchMove Sensitivity" action="generic /sys/bus/i2c/devices/3-004a/mov_hysti" 
			unit=" pixel" min="0" reversed="false" step="1" max="20"/>

		<seekBar description="Setting min_bl higher will result in staying in the lowest brightness level for brighter conditions. Default: 30" 
			name="min_bl" action="generic /sys/class/misc/brightness_curve/min_bl" unit="" min="0" reversed="false" step="10" max="150"/>

		<seekBar description="Minimum brightness level. Default: 1"
			name="min_gamma" action="generic /sys/class/misc/brightness_curve/min_gamma" unit="" min="0" reversed="false" step="1" max="23"/>

		<seekBar description="Maximum brightness level. Default and MAX: 23" 
			name="max_gamma" action="generic /sys/class/misc/brightness_curve/max_gamma" unit="" min="0" reversed="false" step="1" max="23"/>

		<checkbox description="LCD Power Reduce for backlight. If you like brighter screen in cost of battery drain, then turn it off.  Default: On."
			name="LCD POWER" action="generic01 /sys/class/lcd/panel/power_reduce" label="LCD POWER REDUCE"/>

	</settingsPane>

	<settingsPane description="Settings for screen color by user manual input" name="Screen color menu">

		<button description="Push to reset screen color to default" name="Reset color to default" action="push-actions/color_to_default 1" label="Default Color"/>

		<seekBar description="Sets screen BLUE color scale. Default: 127" 
			name="Blue Color Scale" action="generic /sys/devices/platform/samsung-pd.2/mdnie/mdnie/mdnie/user_cb" 
			unit="BLUE" min="78" reversed="false" step="1" max="178"/>

		<seekBar description="Sets screen RED color scale. Default: 127" 
			name="Red Color Scale" action="generic /sys/devices/platform/samsung-pd.2/mdnie/mdnie/mdnie/user_cr" 
			unit="RED" min="78" reversed="false" step="1" max="178"/>

		<checkbox description="mDNIe sharpness tweaks from hardcore. Requires reboot to be effective."
			name="mDNIe sharpness tweaks by GM!" action="generic01 /tmp/mdniemod" label="mDNIe Sharpness Tweaks"/>

	</settingsPane>

	<settingsPane description="Other Settings" name="Other Settings">

		<seekBar description="User adjustable gamma shift. Default: 0" 
			name="Gamma shift" action="generic /sys/class/lcd/panel/user_gamma_adjust" 
			unit="" min="-50" reversed="false" step="5" max="50"/>

		<seekBar description="FB earlysuspend delay to run CRT animation when you turn the screen off." 
			name="FB early suspend delay" action="generickmem fbearlysuspend_delay 0 int" unit=" ms" min="0" reversed="false" step="50" max="500"/>

		<seekBar description="Vibration force level. Default: 75" 
			name="Vibration force" action="generic /sys/vibrator/pwm_val" unit="%" min="0" reversed="false" step="5" max="100"/>

		<seekBar description="Sets Touch screen cpu freq, when you touch the screen CPU will be boosted to that speed! default is 500000mHz)"
			name="Touch screen lock freq" action="generic /sys/devices/virtual/sec/sec_touchscreen/tsp_touch_freq" unit="mHz" min="100000" reversed="false" step="100000" max="1000000"/>

		<checkbox description="Slide2Wake By Fluxi@xda. When screen is turned off, swipe from the left side of the screen to the right side of the screen, and the screen will be turned on!"
			name="Slide2Wake ON/OFF switch" action="generic01 /sys/devices/virtual/sec/sec_touchscreen/tsp_slide2wake" label="Slide2Wake Switch"/>

		<checkbox description="Enable inverting screen colors by quickly pressing Home button." 
			name="mDNIe Negative Toggle" action="generic01 /sys/module/gpio_keys/parameters/mdnie_shortcut_enabled" label="mDNIe Negative Toggle"/>

		<spinner description="Negative Color. Screen effect settings. Fast clicking Home button for the number of times configured will activate MOD" 
			name="Negative Screen Mod tuning." action="negative_tweak">
			<spinnerItem name="Set 4 clicks (default)" value="1"/> 
			<spinnerItem name="Set 6 clicks" value="2"/> 
		</spinner>

	</settingsPane>

	<settingsPane description="Here you can control kernel screen gestures, set at /data/gesture_set.sh. More can be added by user. This tweak depends on cortex background service to be enabled" 
			name="Gestures panel">

		<checkbox description="Here you can turn on/off kernel built in gestures! See OP for instructions/ask in forum."
			name="Gestures switch" action="generic_gestures /tmp/gesture_tweak" label="Gestures switch"/>

		<button description="Click to reset gestures to default, or update with new one from dev. Gesture file will be added to `/data/` only if it is missing." name="Reset gestures" action="push-actions/reset_gestures" label="Reset Gestures"/>

	</settingsPane>

	<settingsPane description="Touchscreen configuration on battery and on charge. !ALERT! Wrong settings will disable touch screen! You will have to reset profiles in recovery! Also, settings for battery and charger are different! Do not set the same levels! Have fun tuning." name="Touch screen sensitivity">

		<seekBar description="Touchscreen on BATTERY (Touch Threshold) (Default: 50)" 
			name="BATT Touch Treshold" action="touch_screen_tweak 1" unit="" min="30" reversed="false" step="1" max="70"/>

		<seekBar description="Touchscreen on BATTERY (Noise Threshold) (Default: 40)" 
			name="BATT Noise Treshold" action="touch_screen_tweak 2" unit="" min="20" reversed="false" step="1" max="70"/>

		<seekBar description="Touchscreen on BATTERY (Move Filter) (Default: 12)" 
			name="BATT Move Filter" action="touch_screen_tweak 3" unit="" min="2" reversed="false" step="1" max="30"/>

		<seekBar description="Touchscreen on CHARGER/USB (Touch Threshold) (Default: 53)" 
			name="CHRG Touch Treshold" action="touch_screen_tweak 4" unit="" min="30" reversed="false" step="1" max="70"/>

		<seekBar description="Touchscreen on CHARGER/USB (Noise Threshold) (Default: 38)" 
			name="CHRG Noise Treshold" action="touch_screen_tweak 5" unit="" min="20" reversed="false" step="1" max="60"/>

		<seekBar description="Touchscreen on CHARGER/USB (Move Filter) (Default: 47)" 
			name="CHRG Move Filter" action="touch_screen_tweak 6" unit="" min="20" reversed="false" step="1" max="60"/>

    </settingsPane>

</settingsTab>

<settingsTab name="Sound">

	<settingsPane description="JB ROM low sound bug fix on boot" name="LOW SOUND FIX">

		<checkbox description="Dirty Hack for JB ROM low Sound after boot. This patch will push the Vol DOWN and Vol UP for you on boot, and fix the low sound/ring every boot. You will see the volume slider moving! That is how it's fixed. Also it will reset the silence state if it's was set before boot. If you have an ICS ROM, just ignore this, it will not be used, ICS ROMs don't have the bug. Fix is OFF by default, if you set ON, effect will be on boot only." 
			name="JB low sound fix on boot" action="generic_cortex /tmp/jb_sound_fix" label="JB low sound fix on boot"/> 

	</settingsPane>

	<settingsPane description="Master headphone gain (amplification) settings, thanks to Gokhanmoral!" name="Headphone Amplification">
		<spinner description="Headphone amplifier level (0-3 which corresponds to 0dB, 1.5dB, 3dB, 6dB)"
			name="Headphone Amplifier" action="soundgasm_hp">
			<spinnerItem name="Disabled/Reset" value="0"/> 
			<spinnerItem name="Boost 1.5dB" value="1"/> 
			<spinnerItem name="Boost 3dB" value="2"/> 
			<spinnerItem name="Boost 6dB" value="3"/> 
		</spinner>

	</settingsPane>

	<settingsPane description="More headphone amplification + speaker amplification + Mic gain" name="Volume Levels and Gain Control">

		<seekBar description="Headphone amplification level"
			name="Analog headphone level" action="sound_volume 1" unit="dB" min="-10" reversed="false" step="2" max="20"/>

		<seekBar description="Headphone gain power level"
			name="Analog headphone gain" action="sound_volume 4" unit="dB" min="-6" reversed="false" step="1" max="6"/>

		<seekBar description="Analog Mic gain level"
			name="Mic gain Level" action="sound_volume 2" unit="dB" min="-12" reversed="false" step="4" max="12"/>

		<seekBar description="Analog speaker level"
			name="Speaker level" action="sound_volume 3" unit="dB" min="-12" reversed="false" step="4" max="12"/>

	</settingsPane>

</settingsTab>

<settingsTab name="BLN">

	<settingsPane description="BackLightNotification and Touch Keys related Settings" name="BackLightNotification">

		<checkbox description="BackLightNotification" name="BLN" action="generic /sys/class/misc/notification/notification_enabled" label="BLN"/>

		<spinner description="This setting will set led behavior for BLN." name="BLN Effect" action="bln_switch">
			<spinnerItem name="Steady" value="0"/>
			<spinnerItem name="Breathing" value="1"/>
			<spinnerItem name="Blinking" value="2"/>
		</spinner>

		<spinner description="Notification timeout" name="notification_timeout" action="generic /sys/class/misc/notification/notification_timeout">
			<spinnerItem name="Never timeout" value="0"/> 
			<spinnerItem name="1 minute" value="60000"/> 
			<spinnerItem name="3 minutes" value="180000"/> 
			<spinnerItem name="5 minutes" value="300000"/> 
			<spinnerItem name="10 minutes" value="600000"/> 
			<spinnerItem name="20 minutes" value="1200000"/> 
			<spinnerItem name="30 minutes" value="1800000"/> 
			<spinnerItem name="1 Hour" value="3600000"/> 
			<spinnerItem name="2 Hours" value="7200000"/> 
		</spinner>

	</settingsPane>

	<settingsPane description="Touch keys light settings. Here you can set the way touch keys light work." name="Touch keys lights settings">

		<spinner description="Led timeout. Select 'Use ROM defaults' if your ROM already has led timeout support (requires restart). You will need to use this setting on Samsung ROMs if you want to use led fadeout effect." 
			name="led_timeout" action="generic /sys/class/misc/notification/led_timeout_ms">
			<spinnerItem name="Use ROM defaults (disabled)" value="-1"/> 
			<spinnerItem name="No timeout" value="0"/> 
			<spinnerItem name="1 sec" value="1000"/> 
			<spinnerItem name="3 sec" value="3000"/> 
			<spinnerItem name="6 sec" value="6000"/> 
			<spinnerItem name="15 sec" value="15000"/> 
			<spinnerItem name="30 sec" value="30000"/> 
			<spinnerItem name="60 sec" value="60000"/> 
		</spinner>

		<checkbox description="BLN Without Wakelock. You cannot use blinking or breathing effects together with this option. Enabling this will let the CPU sleep during BLN and save battery." 
			name="BLNWW" action="generic /sys/class/misc/notification/blnww" label="BLNWW"/>

		<checkbox description="Led fadeout effect. If you are on a Samsung ROM, you need to set Touch Keys leds to always on or always off and use led timeout in STweaks." 
			name="Led fadeout" action="generic /sys/class/misc/notification/led_fadeout" label="Led fadeout"/>

		<checkbox description="Selecting this will activate turning touckey leds on when you touch the screen (only when led timeout is enabled)." 
			name="Leds on with touch" action="generic /sys/class/misc/notification/led_on_touch" label="led-on-touch"/>

		<button description="Use this button to test BLN. BLN will be active after you turn the screen off." name="Test BLN" action="push-actions/test_bln" label="Test BLN"/>

		<seekBar description="Controls touchpad led voltage level. Default: 3000" 
			name="Led voltage level" action="generic /sys/devices/virtual/sec/sec_touchkey/touchkey_brightness" 
			unit="mV" min="2500" reversed="false" step="50" max="3300"/>

		<checkbox description="Automatic touchpad led voltage level. If this one is checked, touchpad led voltage level will be ignored." 
			name="Auto led voltage" action="generic /sys/class/misc/notification/dyn_brightness" label="Auto Led Voltage"/>

	</settingsPane>

</settingsTab>

<settingsTab name="Cron Tasks">

	<settingsPane description="Here you can activate Auto system: clean, tune, reconfig, resync, and much more." name="CRON TASKS MENU">

		<spinner description="Main switch for cron tasker. If set to OFF, then all tasks below have no effect!" name="CRON TASK MAIN SWITCH" action="crontab">
			<spinnerItem name="Cron tasker ON" value="on"/> 
			<spinnerItem name="Cron tasker OFF" value="off"/> 
		</spinner>

		<button description="Use this button to test if Cron Task Service is ONLINE and supported! If main switch is ON, and service is OFFLINE, then ROM Busybox is not supporting Cron. Update Busybox or ROM for this to work." name="Test Cron Task Service" action="push-actions/crontab_test" label="Test Cron Task Service"/>

		<button description="Use this button to RESET Cron scripts and jobs from kernel, to refresh the configuration. This will clear all custom changes!" name="CRON RESET" action="push-actions/crontab_reset" label="RESET CRON"/>

		<checkbox description="Cron Task to clear RAM Cache/Buffers every hour only if CPU is resting(IDLE)! This will free RAM from unused buffers and cache."
			name="RAM Cache Clean Task" action="generic_cortex /tmp/cron_drop_cache" label="RAM cache clean every Hour"/>

		<checkbox description="Cron Task to update AD-BLOCKER every week at SAT 6:00AM UTC time, from official site. Task will check if internet is connected. If not, it will try to use WIFI! Script will turn wifi, wait for connection and update, then when finished will turn WIFI off. If there's no connection, an error will be written in log."
			name="Update AD Block every week" action="generic_cortex /tmp/ad_block_update" label="Update AD-BLOCKER every week"/>

		<checkbox description="Cron Task to clear applications cache every day at 4:00AM, only if CPU is resting(IDLE)! This can maintain free space on data partition, and clean all old junk."
			name="DISK Clean Task" action="generic_cortex /tmp/cron_clear_app_cache" label="Disk Clean task every day at 4:00AM"/>

		<checkbox description="Cron Task to fix applications sermissions every day at 4:40AM, only if CPU is resting(IDLE)! This can help to reduce errors, bugs, and applications FC."
			name="Permissions Fix Task" action="generic_cortex /tmp/cron_fix_permissions" label="Permissions fix every day at 4:40AM"/>

		<checkbox description="Cron Task to Zipalign all DATA APPS every day at 4:50AM, only if CPU is resting(IDLE)! This can help to reduce errors, bugs, applications FC, and improve applications load speed. WARNING! Bakcup all apps before use! This process will remove apps that are BROKEN and not compressed or compiled correctly, so you may find some apps missing! USE it AT YOUR OWN RISK and update the broken applications!"
			name="Zipalign Task" action="generic_cortex /tmp/cron_zipalign" label="Zipalign Task Every 4:50AM"/>

		<button description="Use this button to check if Cron Task Jobs are done as requested. This will show the log for all finished jobs." name="Test Cron Task jobs" action="push-actions/crontab_log" label="Test Cron Task Jobs"/>

	</settingsPane>

</settingsTab>

<settingsTab name="I/O and OOM">

	<settingsPane description="Here you can tune I/O and OOM(low mem management) settings managed by Kernel" name="I/O and OOM Tuning">

		<spinner description='Maximum number of kilobytes to read-ahead for file systems on this block device. Maybe get better read-performance with higher value, but you will probably need to experiment and benchmark (e.g. with "SD Tools"-App) to find the best value for your sd-card / system and maybe you will have a higher overhead (less memory) with a higher value. Works only if "I/O-Tweaks" tweak is enabled! Default: 128'
			name="kilobytes to read-ahead" action="generic_cortex /tmp/cortexbrain_read_ahead_kb">
			<spinnerItem name="64 kb" value="64"/>
			<spinnerItem name="128 kb" value="128"/>
			<spinnerItem name="256 kb" value="256"/>
			<spinnerItem name="512 kb" value="512"/>
			<spinnerItem name="1024 kb" value="1024"/>
			<spinnerItem name="2048 kb" value="2048"/>
			<spinnerItem name="4096 kb" value="4096"/>
		</spinner>

		<spinner description="This will set the default AWAKE I/O scheduler for internal, system, data and external sdcard, use ZEN if you have problems to copy big files to external sdcard!. Default: ZEN"
			name="Default Awake I/O Scheduler" action="generic /sys/block/mmcblk0/queue/scheduler">
			<spinnerItem name="BFQ" value="bfq"/> 
			<spinnerItem name="CFQ" value="cfq"/> 
			<spinnerItem name="DEADLINE" value="deadline"/> 
			<spinnerItem name="NOOP" value="noop"/> 
			<spinnerItem name="ROW" value="row"/> 
			<spinnerItem name="SIO" value="sio"/> 
			<spinnerItem name="VR" value="vr"/> 
			<spinnerItem name="ZEN" value="zen"/> 
		</spinner>

		<spinner description="This will set the STANDBY/DEEPSLEEP I/O scheduler for internal, system, data and external sdcard. Default: NOOP"
			name="STANDBY/DEEPSLEEP I/O Scheduler" action="generic /sys/block/mmcblk0/queue/sleep_scheduler">
			<spinnerItem name="BFQ" value="bfq"/>
			<spinnerItem name="CFQ" value="cfq"/>
			<spinnerItem name="DEADLINE" value="deadline"/>
			<spinnerItem name="NOOP" value="noop"/>
			<spinnerItem name="ROW" value="row"/>
			<spinnerItem name="SIO" value="sio"/>
			<spinnerItem name="VR" value="vr"/>
			<spinnerItem name="ZEN" value="zen"/>
		</spinner>

		<spinner description="Here you can set the level of low mem managemet by kernel lowmemkiller function, more aggressive, then more free RAM but more killed apps"
			name="OOM Level Tuning" action="oom_config">
			<spinnerItem name="very_light" value="very_light"/> 
			<spinnerItem name="light" value="light"/> 
			<spinnerItem name="medium" value="medium"/> 
			<spinnerItem name="aggressive" value="aggressive"/> 
			<spinnerItem name="exterminate" value="exterminate"/> 
		</spinner>

	</settingsPane>

</settingsTab>

<settingsTab name="Misc">

	<settingsPane description="Dual Mount-SDCARD and MMC via USB. After USB is disconnected, Dual Mount is disabled! This tweak is working automatically. Plug USB, turn off the screen and then turn ON, and you get working mounts. To scan your new MEDIA files, use some app to force Media Scan." name="DUAL MOUNT USB">

		<button description="Dual Mount USB Switch" name="DUAL MOUNT" action="push-actions/dualmount" label="Dual Mount"/>

	</settingsPane>

	<settingsPane description="Here you can run Fix Permissions, Zipalign, and Database Optimization scripts with one click! Please click one time only, scripts will finish in max 2~3min, no reboot is needed."
	  		name="FIX PERMISIONS + ZIP ALIGN + DB OPTIMIZE"> 

		<button description="Click here to start fixing." name="FIX PERMISSIONS" action="push-actions/fix_permissions" label="FIX PERMISSIONS"/>

		<button description="Click here to start Zipaligning ONLY user apps. System may be unresponsive, it's OK, do not use phone for 2 minutes. WARNING! Backup all user applications before use! This process will remove applications that are BROKEN and not compressed or compiled correctly, so you may find some apps missing. USE it AT YOUR OWN RISK, and update the broken applications!." name="ZIPALIGN" action="push-actions/zipalign" label="ZIPALIGN ALL APPS"/>

		<button description="Click here to start applications Database Optimization. Compacting, cleaning and reindexing will take max 2min." name="DB OPTIMIZATION" action="push-actions/database_optimizing" label="DATABASE OPTIMIZATON"/>

	</settingsPane>

	<settingsPane description="Misc Settings" name="Misc Settings">

		<spinner description="WIFI supplicant scan interval. Here you can set the time in sec for WIFI to look for access points when ON. Higher the range, less battery used by WIFI! If you want WIFI to be forced OFF on screen OFF, Turn Force WIFI OFF Tweak in Cortex TAB, also if cortex process is ON, then it will be set automatically to 360sec on Screen OFF, so set your range for screen ON!"
			name="WIFI supplicant scan interval" action="supplicant_scan_interval">
			<spinnerItem name="Set WIFI SCAN 60Sec" value="60"/> 
			<spinnerItem name="Set WIFI SCAN 120Sec" value="120"/> 
			<spinnerItem name="Set WIFI SCAN 180Sec" value="180"/> 
			<spinnerItem name="Set WIFI SCAN 240Sec" value="240"/> 
			<spinnerItem name="Set WIFI SCAN 360Sec" value="360"/> 
		</spinner>

		<checkbox description="Enable or Disable INIT.D scripts RUN on boot. Many new ROMS are running the init.d scripts automatically. You can also force running the scripts, but if you run them and ROM runs them too, we have a problem: all scripts are running X2 times! To avoid conflicts, Stweaks RUN-control is disabled by default. If you know that your ROM is NOT supporting init.d script running, then turn it ON here and reboot."
			name="INIT.D Scripts RUN control" action="generic /tmp/init_d" label="Enable INIT.D scripts RUN-control"/>

		<checkbox description="Enable or Disable Android Additional Logs (needs reboot)" 
			name="Android Logger" action="generic /tmp/logger" label="Android Logger"/>

		<spinner description="ZRAM Module settings. Here you can shut down ZRAM or add more compressed RAM for your system." 
			name="ZRAM Settings" action="zramtweaks">
			<spinnerItem name="Set ZRAM to 150MB" value="1"/> 
			<spinnerItem name="Set ZRAM to 300MB (default)" value="2"/> 
			<spinnerItem name="Set ZRAM to 600MB" value="3"/> 
			<spinnerItem name="Set ZRAM OFF!" value="4"/> 
		</spinner>

		<button description="ZRAM state check" name="ZRAM STATS" action="push-actions/zramstats" label="ZRAM STATS"/>

		<button description="Update time via NTP server" name="UPDATE TIME" action="push-actions/time_update" label="UPDATE TIME"/>

		<spinner description="GPS Time Zone for faster GPS lock! Use your region to fix GPS location!" name="GPS Region" action="gpsregion">
			<spinnerItem name="No GPS Zone changes (default)" value="No_GPS_Zone_changes"/> 
			<spinnerItem name="Set Asia" value="Asia"/> 
			<spinnerItem name="Set Europe" value="Europe"/> 
			<spinnerItem name="Set Oceania" value="Oceania"/> 
			<spinnerItem name="Set North America" value="North-America"/> 
			<spinnerItem name="Set South America" value="South-America"/> 
			<spinnerItem name="Set Africa" value="Africa"/> 
			<spinnerItem name="Restore original ROM gps.conf" value="Original_ROM_GPS_Restored"/> 
		</spinner>

		<button description="Click to see your current GPS ZONE" name="GPS ZONE" action="push-actions/gpszonecheck" label="GPS ZONE CHECK"/>

		<spinner description="Change USB connection mode. Either leave it as default or force it to mass storage mode (you will see your sdcards as disks) or MTP." 
			name="USB mass storage mode" action="usb-mode">
			<spinnerItem name="Default" value="default"/>
			<spinnerItem name="Force Mass Storage Mode" value="mass_storage-adb"/>
			<spinnerItem name="Force MTP Mode" value="mtp-adb"/>
		</spinner>

		<checkbox description="If checked, Mass Storage SDCARDS will be Auto mounted when USB connected. then you can transfer files on high speed from PC to device. ON by Default."
			name="Auto Mount USB Drives" action="generic_cortex /tmp/auto_mount_sd" label="Auto Mount USB Drives"/>

		<checkbox description="If checked, BetterBatteryStatus will report discrete (non-overlapping) wakelock statistics." 
			name="Discrete Wakelock Stats" action="generic01 /sys/module/wakelock/parameters/default_stats" label="Discrete Wakelock Stats"/> 

		<seekBar description="Battery AC Charge Current Setting" name="Battery AC Charge Current" action="chargecurrent 1" 
                        unit="mA" min="450" reversed="false" step="50" max="750"/>

		<seekBar description="Battery MISC Charge Current Setting" name="Battery MISC Charge Current" action="chargecurrent 2" 
			unit="mA" min="450" reversed="false" step="50" max="750"/>

		<seekBar description="Battery USB Charge Current Setting" name="Battery USB Charge Current" action="chargecurrent 3" 
			unit="mA" min="450" reversed="false" step="50" max="750"/>

		<button description="If you think that the fuel gauge chip is behaving weird use this button to reset it. Give it a few hours after you reset the gauge. It may still show you funny values for that period, then the battery percentage should be fine." name="Reset Fuel-Gauge Chip" action="push-actions/reset-fuelgauge" label="Reset Fuel-Gauge Chip"/>

		<button description="DATA and CACHE file system check and repair on boot. !WARNING! This is a VERY DANGEROUS option! Before activating it DO A FULL BACKUP with Titanium Backup or any kind of backup application! If you have lots of damage in your DATA partition, after fix and repair, ROM may NOT BOOT anymore! In that case reinstall ROM, and if you still can't boot, you will have to format DATA file system via recovery! USE IT AT YOUR OWN RISK! THIS FUNCTION IS NOT A TOY! YOU HAVE BEEN WARNED! This function works only for main ROM, second ROM gets no effect and by default it's OFF. It's also one time action, push the button to Activate, push again to Abort!" name="FIX File System on BOOT" action="push-actions/fix_fs_on_boot" label="FIX DATA ON/OFF"/>

		<button description="Clean the media cache on your sdcard. Push once to clean, push again to abort. You have to reboot for action to work!" name="Clean media-cache" action="push-actions/fix_media" label="FIX MEDIA ON/OFF"/>

		<button description="Clean WIFI DHCP IP Lease. Push the botton to activate!" name="Clean WIFI Lease" action="push-actions/fix_wifi" label="Clean WIFI Lease"/>

	</settingsPane>

	<settingsPane description="Remove OR Reinstall ROOT! You can have a ROOTED or not ROOTED phone." name="Remove OR Reinstall Root">

		<button description="Root Install. Click to install ROOT (SuperUser) + ROM busybox if existed. In case you have used the remove button, to Reinstall ROOT first REMOVE it! This function depends on CORTEX process to be enabled!" name="ROOT INSTALL" action="push-actions/root_install" label="INSTALL ROOT"/>

		<button description="Root Remove/Uninstall. Click to remove Any ROOT installed + busybox (kernel's busybox remains, but is hidden from system) To install ROOT check the Auto-Install Root and REBOOT." name="ROOT REMOVE" action="push-actions/root_remove" label="REMOVE ROOT"/>

		<button description="Root check. Click to see if you have ROOT or not" name="ROOT Check" action="push-actions/root_check" label="ROOT CHECK"/>

		<checkbox description="If box is checked, root will be installed on the next restart." name="Auto-Install Root" action="generic /tmp/install_root" label="Auto-Install Root"/>

	</settingsPane>

</settingsTab>

<settingsTab name="Dualboot">

	<settingsPane description="Dual-Boot Settings. WARNING! No confirmation will be asked for reboot buttons!" name="Dual-Boot Settings">

		<button description="Reboot into custom recovery which let you configure, clone or backup the 2nd ROM" name="Reboot into ROM Recovery" action="reboot-into 0" label="Reboot into recovery"/>

		<button description="Reboot into 1st ROM" name="Reboot into 1st ROM" action="reboot-into 1" label="Reboot into 1st ROM"/>

		<button description="Reboot into 2nd ROM" name="Reboot into 2nd ROM" action="reboot-into 2" label="Reboot into 2nd ROM"/>

		<checkbox description="Check this if you don't want boot logo to be shown. If this options is checked boot logo will not be shown even if you have 2ndROM installed." 
			name="No boot-logo" action="no-boot-logo" label="No boot-logo"/>

		<spinner description="Default ROM to boot into. If you don't have 2nd ROM installed, 1st ROM will be booted. If you press the home or volume-down buttons during the boot logo the alternative ROM will be booted, i.e. 1st ROM will be booted if the default ROM selection is the 2nd ROM." name="Default ROM" action="defaultrom">
			<spinnerItem name="1stROM" value="0"/> 
			<spinnerItem name="2ndROM" value="1"/> 
		</spinner>

	</settingsPane>

</settingsTab>

<settingsTab name="CortexBrain">

	<settingsPane description="Here you can manage Cortexbrain-tune script" name="Automation Script tuning.">

		<spinner description='Enable or Disable the "background-process" from "cortexbrain-tune.sh". If you disable it, you will you lose kernel AI that maintains your device. After enabling it, wait 2sec, then push the "CHECK SERVICE" button to see if service is online.'
			name="Cortexbrain-Background-Process" action="cortexbrain_background_process">
			<spinnerItem name="Enable" value="1"/> 
			<spinnerItem name="Disable" value="0"/> 
		</spinner>

		<button description="Cortex service checker. Click to see if Cortexbrain 'background-process' is running or not" name="CORTEX Service check" action="push-actions/cortexbrain_background_process_check" label="CHECK SERVICE"/>

		<spinner description='Here you can control android logger "logcat". If you set it to AUTO, then you will have logs only on screen is on. When screen will be off, logger will be disabled to save battery. If you set DEBUG, it will be working no matter what! If set to DISABLED, logging will be off, no matter what. The tweak depends on Cortexbrain to be enabled. If USB/Charger is connected and logger is set to AUTO, logging will not be disabled so we can debug.'
			name="Android Logger control" action="android_logger">
			<spinnerItem name="AUTO" value="auto"/> 
			<spinnerItem name="DEBUG" value="debug"/> 
			<spinnerItem name="DISABLED" value="disabled"/> 
		</spinner>

		<checkbox description='Enable or Disable the "Wifi turns off while screen is off" function. Depends on Cortexbrain-Background-Process to be enabled!'
			name="Auto-Wifi" action="generic_cortex /tmp/cortexbrain_auto_tweak_wifi" label="Force Auto-Wifi"/>

		<seekBar description='Here you can set a delay before WIFI is forced to OFF when screen is turned off. Works only if "Auto-Wifi" tweak is Enabled!' 
			name="WIFI Turn Off Delay (in sec)" action="generic /tmp/cortexbrain_auto_tweak_wifi_sleep_delay"
			unit="sec" min="0" reversed="false" step="30" max="300"/>

                <!--checkbox description="Here you can allow WIFI to use LOW PWR when Screen is turned OFF. When screen is back ON, WIFI turns back to high PWR). If not set, WIFI uses HIGH PWR and get fast WIFI transfers on screen OFF"
                        name="Wifi Low PWR Switch" action="generic_cortex /tmp/wifi_pwr" label="Wifi Low PWR"/-->

		<checkbox description='Enable or Disable "sync brightnes with the battery discharge" (less battery = less brightnes). Depends on Cortexbrain-Background-Process!'
			name="Sync-Brightness" action="generic_cortex /tmp/cortexbrain_auto_sync_brightness" label="Sync-Brightness"/>

		<checkbox description='Enable or Disable "less set brightnes". Depends on Cortexbrain-Background-Process!'
			name="Less-Brightness" action="generic_cortex /tmp/cortexbrain_auto_less_brightness" label="Less-Brightness"/>

		<seekBar description='Here you can set a value for less brightnes. Works only if "Less-Brightness" tweak is enabled!' 
			name="Set value (0 - 100)" action="generic /tmp/cortexbrain_less_brightness"
			unit="" min="0" reversed="false" step="5" max="255"/>

		<checkbox description='Enable or Disable "Firewall-Tweaks". (To update after change REBOOT)'
			name="Firewall-Tweaks" action="generic_cortex /tmp/cortexbrain_firewall" label="Firewall-Tweaks"/>

		<checkbox description='Enable or Disable "TCP-Tweaks". (To update after change REBOOT)'
			name="TCP-Tweaks" action="generic_cortex /tmp/cortexbrain_tcp" label="TCP-Tweaks"/>

		<checkbox description='Enable or Disable "IPv6 Network". (Default is OFF. To update after change, turn OFF screen and then turn it ON after 3sec!)'
			name="IPv6 Tweaks" action="generic_cortex /tmp/cortexbrain_ipv6" label="IPv6"/>

		<checkbox description='Enable or Disable "CPU-Tweaks". (To update after change, turn OFF screen and turn it ON after 3sec!)'
			name="CPU-Tweaks" action="generic_cortex /tmp/cortexbrain_cpu" label="CPU-Tweaks"/>

		<checkbox description='Enable or Disable "Memory-Tweaks". (To update after change REBOOT)'
			name="Memory-Tweaks" action="generic_cortex /tmp/cortexbrain_memory" label="Memory-Tweaks"/>

		<checkbox description='Enable or Disable "Battery-Tweaks". (To update after change REBOOT)'
			name="Battery-Tweaks" action="generic_cortex /tmp/cortexbrain_battery" label="Battery-Tweaks"/>

		<checkbox description='Enable or Disable "System-Tweak". (To update after change REBOOT)'
			name="System-Tweaks" action="generic_cortex /tmp/cortexbrain_system" label="System-Tweaks"/>

		<checkbox description='Enable or Disable "Kernel-Tweaks". (To update after change REBOOT)'
			name="Kernel-Tweaks" action="generic_cortex /tmp/cortexbrain_kernel_tweaks" label="Kernel-Tweaks"/>

		<checkbox description='Enable or Disable "I/O-Tweaks". (To update after change REBOOT)'
			name="I/O-Tweaks" action="generic_cortex /tmp/cortexbrain_io" label="I/O-Tweaks"/>

	</settingsPane>

</settingsTab>

<settingsTab name="BACKUP/RESTORE">

	<settingsPane description="Here you can Backup/Restore your STWEAKS settings after installing new kernel. When you restore STWEAKS, the application will be closed and your settings will be committed! Some settings will work only after reboot! Wait till STWEAKS restarts with the new settings! Restore will take up to 30 sec, just wait here!"
			name="STweaks Settings Backup/Restore">

		<button description="Backup STweaks User Settings!" name="Settings Backup" action="push-actions/config_backup_restore 1" label="BACKUP NOW"/>

		<button description="Restore STweaks User Settings!" name="Settings Restore" action="push-actions/config_backup_restore 2" label="RESTORE NOW"/>

	</settingsPane>

	<settingsPane description="Here you can restore Home Key config before installing other JB Sammy Kernel, you must push this button or Home Key will not work with other kernel."
			name="Home Key Restore to JB Sammy default">

		<button description="Before installing any other JB SAMMY'LEAK' kernel, use this to restore Home Key, if you will reboot again with my kernel, you will have to push button again, to restore the key before installing different JB SAMMY kernel, if you stay with my kernel, ignore this button!" name="Restore home key for other kernels" action="push-actions/home_key_restore" label="Restore Home Key NOW"/>

	</settingsPane>

	<settingsPane description="Here you can Reinstall/Update your STweak app to one that's added in the kernel. It will be installed to /system and if you had STweaks in /data, it will be removed. Application will close and you'll have it back from kernel in 5sec."
			name="STweaks Reinstall/Update.">

		<button description="Push to Reinstall/Update STweaks app." name="STweaks Reinstall/Update" action="push-actions/stweaks_update" label="STweaks Reinstall/Update"/>

	 </settingsPane>

	<settingsPane description='Here you can Add/Update/Remove AD Blocker! You need ROOT to do the tweak! If you want to update the blocker, you can push the "UPDATE AD NOW" button, to get the new one installed! If you install a new ROM, and you want to use AD BLOCKER, then push "UPDATE AD NOW" and REBOOT. If you need to REMOVE AD-BLOCKER use the REMOVE button and REBOOT' name="AD Blocker menu.">

		<button description="ADD/UPDATE AD BLOCKER" name="AD-B UPDATE/ADD" action="push-actions/ad_update" label="UPDATE AD-B NOW"/>

		<button description="REMOVE AD Blocker" name="AD-B REMOVE" action="push-actions/ad_restore" label="REMOVE AD-B NOW"/>

	</settingsPane>

</settingsTab>

<settingsTab name="PROFILES">

	<settingsPane description="Here you can choose some profiles. You can also switch the default profiles (battery, default, performance) via Kernel-Recovery." name="STweaks Profiles.">

		<button description="extreme_battery.profile" name="extreme_battery.profile" action="push-actions/config_backup_restore 6" label="EXTREME BATTERY"/>

		<button description="battery.profile" name="battery.profile" action="push-actions/config_backup_restore 3" label="BATTERY"/>

		<button description="default.profile" name="default.profile" action="push-actions/config_backup_restore 4" label="DEFAULT"/>

		<button description="performance.profile" name="performance.profile" action="push-actions/config_backup_restore 5" label="PERFORMANCE"/>

		<button description="extreme_performance.profile" name="extreme_performance.profile" action="push-actions/config_backup_restore 7" label="EXTREME PERFORMANCE"/>

	</settingsPane>

</settingsTab>

<settingsTab name="BUG-REPORT">

	<settingsPane description="Debug to SD-Card (/sdcard) ..." name="Bug-Report">

		<button description="Bug-Report for Kernel" name="Kernel-Bug" action="push-actions/debug_to_sd 1" label="KERNEL-BUG"/>

		<button description="Bug-Report for Apps" name="App-Bug" action="push-actions/debug_to_sd 2" label="APP-BUG"/>

	</settingsPane>

</settingsTab>

<settingsTab name="KERNEL-UPDATE">

	<settingsPane description="Check if there is a new kernel-update available." name="Kernel-Update">

		<button description="Check for Update" name="Kernel-Update" action="push-actions/kernel_check" label="KERNEL-CHECK"/>

	</settingsPane>

</settingsTab>

</settingsRoot>
